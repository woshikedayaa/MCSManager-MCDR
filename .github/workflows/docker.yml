name: Docker Build
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-daemon:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker meta daemon
        id: meta_daemon
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository }}-daemon
            name=githubyumao/mcsmanager-daemon,enable=${{ github.repository == 'MCSManager/MCSManager-MCDR' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # build
      - name: Run build script
        run: |
          docker buildx build --load -f dockerfile/daemon.dockerfile \
          -t ${{ steps.meta_daemon.outputs.tags }} \
          --build-arg BUILDPLATFORM=linux/amd64 \
          --build-arg EMBEDDED_JAVA_VERSION=21 .
      - name: Save Docker image
        run: |
          docker save -o daemon.image.tar ${{ steps.meta_daemon.outputs.tags }}
      - name: Upload generated file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: daemon.image
          path: ./daemon.image.tar

  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker meta web
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository }}-web
            name=githubyumao/mcsmanager-web,enable=${{ github.repository == 'MCSManager/MCSManager-MCDR' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # build
      - name: Run build script
        run: |
          docker buildx build --load -f dockerfile/web.dockerfile \
          -t ${{ steps.meta_web.outputs.tags }} \
          --build-arg BUILDPLATFORM=linux/amd64 .
      - name: Save Docker image
        run: |
          docker save -o web.image.tar ${{ steps.meta_web.outputs.tags }}
      - name: Upload generated file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: web.image
          path: ./web.image.tar
